{"version":3,"sources":["components/shared/sidebar.jsx","components/companyProfileComponents/inputField.jsx","components/companyProfileComponents/submitButton.jsx","components/companyProfileComponents/selectField.jsx","components/companyProfileComponents/companyProfile.jsx","redux/companyProfileData/action.jsx","components/agentComponents/agentTable.jsx","pages/App.js","serviceWorker.js","redux/baseReducer.jsx","redux/agentData/reducer.jsx","redux/agentData/action.jsx","redux/companyProfileData/reducer.jsx","redux/companyProfileData/api.jsx","redux/companyProfileData/saga.jsx","redux/agentData/api.jsx","redux/agentData/saga.jsx","redux/baseSaga.jsx","redux/store.jsx","index.js"],"names":["SideBar","state","open","handleDrawerOpen","setState","handleDrawerClose","className","AppBar","position","Toolbar","IconButton","color","aria-label","onClick","this","edge","Typography","variant","noWrap","Drawer","anchor","Box","textAlign","List","to","ListItem","button","ListItemIcon","ListItemText","primary","Divider","Component","Inputs","TextField","fullWidth","name","props","label","type","InputLabelProps","inputLabelProps","SubmitButton","Button","size","SelectField","feild","menuItems","value","handleChange","event","target","console","log","Select","id","labelId","onChange","map","MenuItem","key","CompanyProfile","renderCompanyProfileForm","formikProps","onSubmit","handleSubmit","FormGroup","mb","Grid","container","spacing","item","xs","errors","companyName","FormControl","InputLabel","companyFeilds","shrink","companyStartDate","companySlogan","initialValues","data","requestOutput","validationSchema","Yup","shape","max","required","connect","payload","AgentTable","columns","page","rowsPerPage","handleChangePage","newPage","handleChangeRowsPerPage","Paper","TableContainer","Table","TableHead","TableRow","column","TableCell","align","TableBody","rows","slice","row","tabIndex","format","TableFooter","TablePagination","rowsPerPageOptions","colSpan","count","length","onChangePage","onChangeRowsPerPage","AgentReducer","App","Container","maxWidth","exact","path","component","Boolean","window","location","hostname","match","BaseReducer","combineReducers","agentName","agentAge","jobTitle","action","alert","CompanyReducer","companyApi","URL","addCompanyData","companyDataObj","a","axios","post","getApiData","SagaCompany","put","takeEvery","AgentApi","getAgentData","get","SagaAgent","BaseSaga","all","fork","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.589108d1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport RecentActorsIcon from \"@material-ui/icons/RecentActors\";\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./sidebar.css\";\r\nclass SideBar extends Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"root\">\r\n        {/* start navbar */}\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={this.handleDrawerOpen}\r\n              edge=\"start\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" noWrap>\r\n              Dashboard React App\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        {/* end navbar */}\r\n\r\n        {/* start sidebar */}\r\n        <Drawer\r\n          variant=\"persistent\"\r\n          anchor=\"left\"\r\n          open={this.state.open}\r\n          className=\"drawer\"\r\n        >\r\n          <Box textAlign=\"right\" className=\"drawerHeader\">\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              <ChevronLeftIcon></ChevronLeftIcon>\r\n            </IconButton>\r\n          </Box>\r\n          <List>\r\n            <NavLink to=\"/\" onClick={this.handleDrawerClose}>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <PermIdentityIcon></PermIdentityIcon>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Agent Data\" />\r\n              </ListItem>\r\n            </NavLink>\r\n\r\n            <Divider />\r\n\r\n            <NavLink to=\"/company-profile\" onClick={this.handleDrawerClose}>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <RecentActorsIcon></RecentActorsIcon>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Company Profile\" />\r\n              </ListItem>\r\n            </NavLink>\r\n          </List>\r\n        </Drawer>\r\n\r\n        {/* end sidebar */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SideBar;\r\n","import React, { Component } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nexport class Inputs extends Component {\r\n  render() {\r\n    return (\r\n      <TextField\r\n        fullWidth\r\n        name={this.props.name}\r\n        label={this.props.label}\r\n        type={this.props.type}\r\n        InputLabelProps={this.props.inputLabelProps}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nexport class SubmitButton extends Component {\r\n  render() {\r\n    return (\r\n      <Button\r\n        type={this.props.type}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        fullWidth\r\n      >\r\n        Submit\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { MenuItem, Select } from \"@material-ui/core\";\r\n\r\nexport class SelectField extends Component {\r\n  state = {\r\n    feild: \"\",\r\n    menuItems: [\r\n      {\r\n        value: \"\",\r\n        name: \"None\",\r\n      },\r\n      {\r\n        value: \"software\",\r\n        name: \"software feild\",\r\n      },\r\n      {\r\n        value: \"hardware\",\r\n        name: \"hardware feild\",\r\n      },\r\n      {\r\n        value: \"marketing\",\r\n        name: \"marketing feild\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ feild: event.target.value });\r\n    console.log(this.state.feild);\r\n    console.log(this.props);\r\n  };\r\n  render() {\r\n    return (\r\n      <Select\r\n        fullWidth\r\n        name={this.props.name}\r\n        id={this.props.name}\r\n        labelId=\"selectLabel\"\r\n        value={this.state.feild}\r\n        onChange={this.handleChange}\r\n      >\r\n        {this.state.menuItems.map((feild) => {\r\n          return (\r\n            <MenuItem key={feild.value} value={feild.value}>\r\n              {feild.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Inputs } from \"./inputField\";\r\nimport { SubmitButton } from \"./submitButton\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport { requestOutput } from \"./../../redux/companyProfileData/action\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  FormGroup,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\nimport { SelectField } from \"./selectField\";\r\nclass CompanyProfile extends Component {\r\n  renderCompanyProfileForm = (formikProps) => {\r\n    return (\r\n      <form\r\n        onSubmit={formikProps.handleSubmit}\r\n        onChange={formikProps.handleChange}\r\n      >\r\n        <FormGroup>\r\n          <Box mb={5}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={6}>\r\n                <Inputs type=\"text\" name=\"companyName\" label=\"Company Name\" />\r\n\r\n                {formikProps.errors.companyName && (\r\n                  <Typography color=\"secondary\">\r\n                    {formikProps.errors.companyName}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"selectLabel\">Company Feild</InputLabel>\r\n                  <SelectField name=\"companyFeilds\" />\r\n                </FormControl>\r\n\r\n                {formikProps.errors.companyFeilds && (\r\n                  <Typography color=\"secondary\">\r\n                    {formikProps.errors.companyFeilds}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <Inputs\r\n                  type=\"date\"\r\n                  name=\"companyStartDate\"\r\n                  label=\"Company Start Date\"\r\n                  inputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n\r\n                {formikProps.errors.companyStartDate && (\r\n                  <Typography color=\"secondary\">\r\n                    {formikProps.errors.companyStartDate}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Inputs\r\n                  type=\"text\"\r\n                  name=\"companySlogan\"\r\n                  label=\"Company Slogan\"\r\n                />\r\n\r\n                {formikProps.errors.companySlogan && (\r\n                  <Typography color=\"secondary\">\r\n                    {formikProps.errors.companySlogan}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <SubmitButton type=\"submit\" />\r\n        </FormGroup>\r\n      </form>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          companyName: \"\",\r\n          companyFeilds: \"\",\r\n          companyStartDate: \"\",\r\n          companySlogan: \"\",\r\n        }}\r\n        onSubmit={(data) => {\r\n          console.log(\"submitted\", data);\r\n          this.props.requestOutput(data);\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          companyName: Yup.string()\r\n            .max(30, \"Name is too long\")\r\n            .required(\"Please Write a company Name\"),\r\n          companyFeilds: Yup.string(),\r\n          //   .required(\"Please select company feild\"),\r\n          companyStartDate: Yup.string().required(\r\n            \"Please Write a company start date\"\r\n          ),\r\n          companySlogan: Yup.string()\r\n            .max(10, \"Slogan is too long\")\r\n            .required(\"Please Write a company slogan\"),\r\n        })}\r\n      >\r\n        {(formikProps) => this.renderCompanyProfileForm(formikProps)}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\nexport default connect(null, { requestOutput })(CompanyProfile);\r\n","export const RequestApiCompany = \"RequestApiCompany\";\r\nexport const ResponseFromApiCompany = \"ResponseFromApiCompany\";\r\n\r\nexport const requestOutput = (data) => {\r\n  return {\r\n    type: ResponseFromApiCompany,\r\n    payload: data,\r\n  };\r\n};\r\nexport const requestInput = (data) => {\r\n  return {\r\n    type: RequestApiCompany,\r\n    payload: data,\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport { TableBody, TableFooter } from \"@material-ui/core\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass AgentTable extends Component {\r\n  state = {\r\n    columns: [\r\n      { id: \"id\", label: \"ID\" },\r\n      { id: \"agentName\", label: \"Agent Name\" },\r\n      { id: \"agentAge\", label: \"Agent Age\" },\r\n      { id: \"jobTitle\", label: \"Job Title\" },\r\n    ],\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setState({ page: newPage });\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event) => {\r\n    this.setState({ rowsPerPage: +event.target.value });\r\n    this.setState({ page: 0 });\r\n    console.log(this.state.page);\r\n  };\r\n  render() {\r\n    console.log(this.state);\r\n    console.log(this.props);\r\n    return (\r\n      <div className=\"container\">\r\n        <Paper className=\"\">\r\n          <TableContainer className=\"container\">\r\n            <Table aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {this.state.columns.map((column) => (\r\n                    <TableCell key={column.id} align={column.align}>\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.props.rows\r\n                  .slice(\r\n                    this.state.page * this.state.rowsPerPage,\r\n                    this.state.page * this.state.rowsPerPage +\r\n                      this.state.rowsPerPage\r\n                  )\r\n                  .map((row) => {\r\n                    return (\r\n                      <TableRow tabIndex={-1} key={row.id}>\r\n                        {this.state.columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format ? column.format(value) : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n              <TableFooter>\r\n                <TableRow>\r\n                  <TablePagination\r\n                    rowsPerPageOptions={[{ label: \"All\", value: -1 }]}\r\n                    colSpan={4}\r\n                    count={this.props.rows.length}\r\n                    rowsPerPage={this.state.rowsPerPage}\r\n                    page={this.state.page}\r\n                    onChangePage={this.handleChangePage}\r\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                  />\r\n                </TableRow>\r\n              </TableFooter>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  // set a new state property\r\n  return {\r\n    rows: state.AgentReducer,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AgentTable);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Container } from \"@material-ui/core\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport SideBar from \"../components/shared/sidebar\";\nimport CompanyProfile from \"../components/companyProfileComponents/companyProfile.jsx\";\nimport AgentTable from \"../components/agentComponents/agentTable.jsx\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <SideBar />\n          <Container maxWidth=\"md\">\n            <Route exact path=\"/\" component={AgentTable} />\n            <Route exact path=\"/company-profile\" component={CompanyProfile} />\n          </Container>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\r\nimport { AgentReducer } from \"./agentData/reducer\";\r\nimport { CompanyReducer } from \"./companyProfileData/reducer\";\r\nexport const BaseReducer = combineReducers({\r\n  AgentReducer: AgentReducer,\r\n  CompanyReducer: CompanyReducer,\r\n});\r\n","import { RequestApiAgent } from \"./action\";\r\nexport const AgentReducer = (\r\n  state = [\r\n    {\r\n      id: \"1\",\r\n      agentName: \"nada yousry\",\r\n      agentAge: \"25\",\r\n      jobTitle: \"front-end developer\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      agentName: \"mai mohamed\",\r\n      agentAge: \"26\",\r\n      jobTitle: \"front-end developer\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      agentName: \"omnia Ahmed\",\r\n      agentAge: \"26\",\r\n      jobTitle: \"front-end developer\",\r\n    },\r\n    {\r\n      id: \"4\",\r\n      agentName: \"nada yousry\",\r\n      agentAge: \"25\",\r\n      jobTitle: \"front-end developer\",\r\n    },\r\n    {\r\n      id: \"5\",\r\n      agentName: \"nada yousry\",\r\n      agentAge: \"25\",\r\n      jobTitle: \"front-end developer\",\r\n    },\r\n    {\r\n      id: \"6\",\r\n      agentName: \"mai mohamed\",\r\n      agentAge: \"26\",\r\n      jobTitle: \"front-end developer\",\r\n    },\r\n    {\r\n      id: \"7\",\r\n      agentName: \"omnia Ahmed\",\r\n      agentAge: \"26\",\r\n      jobTitle: \"front-end developer\",\r\n    },\r\n    {\r\n      id: \"8\",\r\n      agentName: \"nada yousry\",\r\n      agentAge: \"25\",\r\n      jobTitle: \"front-end developer\",\r\n    },\r\n    {\r\n      id: \"9\",\r\n      agentName: \"nada yousry\",\r\n      agentAge: \"25\",\r\n      jobTitle: \"front-end developer\",\r\n    },\r\n    {\r\n      id: \"10\",\r\n      agentName: \"nada yousry\",\r\n      agentAge: \"25\",\r\n      jobTitle: \"front-end developer\",\r\n    },\r\n    {\r\n      id: \"11\",\r\n      agentName: \"mai mohamed\",\r\n      agentAge: \"26\",\r\n      jobTitle: \"front-end developer\",\r\n    },\r\n    {\r\n      id: \"12\",\r\n      agentName: \"omnia Ahmed\",\r\n      agentAge: \"26\",\r\n      jobTitle: \"front-end developer\",\r\n    },\r\n    {\r\n      id: \"13\",\r\n      agentName: \"nada yousry\",\r\n      agentAge: \"25\",\r\n      jobTitle: \"front-end developer\",\r\n    },\r\n  ],\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case RequestApiAgent:\r\n      //   return { ...state, agent: action.payload };\r\n      return alert(\"Request Sucess\");\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const RequestApiAgent = \"RequestApiAgent\";\r\nexport const ResponseFromApiAgent = \"ResponseFromApiAgent\";\r\n\r\nexport const requestOutput = (data) => {\r\n  return {\r\n    type: ResponseFromApiAgent,\r\n    data,\r\n  };\r\n};\r\n","import { RequestApiCompany } from \"./action\";\r\nexport const CompanyReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case RequestApiCompany:\r\n      // return { ...state, company: action.payload };\r\n      console.log(\"Data Added Successfully\");\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nclass companyApi {\r\n  URL = `https://www.any-api`;\r\n  static addCompanyData = async (companyDataObj) =>\r\n    await axios.post(URL, companyDataObj);\r\n}\r\n\r\nexport default companyApi;\r\n","import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport {\r\n  RequestApiCompany,\r\n  ResponseFromApiCompany,\r\n  requestOutput,\r\n} from \"./action\";\r\nimport companyApi from \"./api\";\r\n\r\nexport function* getApiData(action) {\r\n  try {\r\n    // const response = yield call(\r\n    //   companyApi.getCompanyData,\r\n    //   action.data.CompanyData\r\n    // );\r\n    // yield put({ type: RequestApiCompany, payload: response.data.items });\r\n\r\n    console.log(action.payload);\r\n    yield put({\r\n      type: RequestApiCompany,\r\n      payload: action.payload,\r\n    });\r\n    console.log(\"company Added successfully\");\r\n  } catch (e) {\r\n    console.log(`${e} there is error`);\r\n  }\r\n}\r\n\r\n//-------------watchers sagas-------------//\r\nexport default function* SagaCompany() {\r\n  yield takeEvery(ResponseFromApiCompany, getApiData);\r\n}\r\n","import axios from \"axios\";\r\n\r\nclass AgentApi {\r\n  URL = `https://www.any-api`;\r\n  static getAgentData = async () => await axios.get(URL);\r\n}\r\nexport default AgentApi;\r\n","import { takeEvery, put } from \"redux-saga/effects\";\r\nimport { RequestApiAgent, ResponseFromApiAgent } from \"./action\";\r\nimport AgentApi from \"./api\";\r\n\r\nexport function* getApiData(action) {\r\n  try {\r\n    //   if their is api\r\n    // const response = yield call(AgentApi.getAgentData, action.data.AgentData);\r\n    // yield put({ type: RequestApiAgent, payload: response.data.items });\r\n    //   if their is no api\r\n\r\n    console.log(action.payload);\r\n    yield put({\r\n      type: RequestApiAgent,\r\n      payload: action.payload,\r\n    });\r\n    console.log(\"get Agent Data Success\");\r\n  } catch (e) {\r\n    console.log(`${e} there is error`);\r\n  }\r\n}\r\n\r\n//-------------watchers sagas-------------//\r\nexport default function* SagaAgent() {\r\n  yield takeEvery(ResponseFromApiAgent, getApiData);\r\n}\r\n","import { fork, all } from \"redux-saga/effects\";\r\nimport SagaCompany from \"./companyProfileData/saga\";\r\nimport SagaAgent from \"./agentData/saga\";\r\n\r\nexport default function* BaseSaga() {\r\n  yield all([fork(SagaAgent), fork(SagaCompany)]);\r\n}\r\n","import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { BaseReducer } from \"./baseReducer\";\r\nimport BaseSaga from \"./baseSaga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  BaseReducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(BaseSaga);\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./pages/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}